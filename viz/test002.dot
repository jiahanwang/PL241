digraph test002 {
node [shape=box]
1[label="main"]
1 -> 28
28[label="0: MOVE 0 x_1 
1: MOVE 0 y_1 
2: MOVE 0 z_1 
0: MOVE 0 x_1 
1: MOVE 0 y_1 
2: MOVE 0 z_1 
3: FUNC bar x_1 z_1 PARAM[3] 
4: FUNC foo PARAM[4] 
5: MOVE [4] c_1 
6: WRITE c_1 
"]
28 -> 34
34[label="7: END 
"]
6[label="foo"]
6 -> 8
8[label="0: MOVE 0 i_1 
"]
8 -> 9
9[label="1: CMP i_1 10 
4: BLT JUMP[6] 
5: BGE JUMP[15] 
"]
9 -> 11
11[label="6: ADD y 2 
7: MOVE [6] y 
8: ADD x 2 
9: MOVE [8] z 
10: ADD y z 
11: MOVE [10] d_1 
12: ADD i_1 1 
13: MOVE [12] i_2 
14: BRA JUMP[3] 
"]
11 -> 9
9 -> 10
10[label="13: MOVE [12] i_2 
14: BRA JUMP[3] 
"]
16[label="bar"]
16 -> 18
18[label="0: MOVE 0 i_1 
1: MOVE 0 j_1 
"]
18 -> 20
20[label="2: CMP i_1 4 
5: BLT JUMP[7] 
6: BGE JUMP[23] 
"]
20 -> 22
22[label="7: CMP j_1 4 
10: BLT JUMP[12] 
11: BGE JUMP[20] 
"]
22 -> 24
24[label="12: MUL 3 i_2 
13: MUL 3 j_2 
14: ADD [13] [12] 
15: ADDA b_base_address [14] 
16: STORE j_1 ARR[1122] 
17: ADD j_1 1 
18: MOVE [17] j_3 
19: BRA JUMP[9] 
"]
24 -> 22
22 -> 23
23[label="18: MOVE [17] j_3 
19: BRA JUMP[9] 
18: ADDA a_base_address i_4 
19: STORE i_3 ARR[162] 
22: BRA JUMP[4] 
"]
23 -> 20
20 -> 21
21[label="21: LOADPARAM 3 
0: RETURN JUMP[21] 
"]
}
